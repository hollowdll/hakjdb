// kvdbserver gRPC API
// API version: 0.1.0
//
// This package contains Protobuf definitions related to key-value storage.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.27.1
// source: api/v0/kvpb/hashmap_kv.proto

package kvpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SetHashMapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The key to use.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// The fields to be set and their corresponding values.
	FieldValueMap map[string]string `protobuf:"bytes,2,rep,name=field_value_map,json=fieldValueMap,proto3" json:"field_value_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SetHashMapRequest) Reset() {
	*x = SetHashMapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0_kvpb_hashmap_kv_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetHashMapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetHashMapRequest) ProtoMessage() {}

func (x *SetHashMapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0_kvpb_hashmap_kv_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetHashMapRequest.ProtoReflect.Descriptor instead.
func (*SetHashMapRequest) Descriptor() ([]byte, []int) {
	return file_api_v0_kvpb_hashmap_kv_proto_rawDescGZIP(), []int{0}
}

func (x *SetHashMapRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SetHashMapRequest) GetFieldValueMap() map[string]string {
	if x != nil {
		return x.FieldValueMap
	}
	return nil
}

type SetHashMapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of fields that were added.
	FieldsAddedCount uint32 `protobuf:"varint,1,opt,name=fields_added_count,json=fieldsAddedCount,proto3" json:"fields_added_count,omitempty"`
}

func (x *SetHashMapResponse) Reset() {
	*x = SetHashMapResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0_kvpb_hashmap_kv_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetHashMapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetHashMapResponse) ProtoMessage() {}

func (x *SetHashMapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0_kvpb_hashmap_kv_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetHashMapResponse.ProtoReflect.Descriptor instead.
func (*SetHashMapResponse) Descriptor() ([]byte, []int) {
	return file_api_v0_kvpb_hashmap_kv_proto_rawDescGZIP(), []int{1}
}

func (x *SetHashMapResponse) GetFieldsAddedCount() uint32 {
	if x != nil {
		return x.FieldsAddedCount
	}
	return 0
}

type GetHashMapFieldValuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The key to use.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// The fields whose values should be returned.
	Fields []string `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *GetHashMapFieldValuesRequest) Reset() {
	*x = GetHashMapFieldValuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0_kvpb_hashmap_kv_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHashMapFieldValuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHashMapFieldValuesRequest) ProtoMessage() {}

func (x *GetHashMapFieldValuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0_kvpb_hashmap_kv_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHashMapFieldValuesRequest.ProtoReflect.Descriptor instead.
func (*GetHashMapFieldValuesRequest) Descriptor() ([]byte, []int) {
	return file_api_v0_kvpb_hashmap_kv_proto_rawDescGZIP(), []int{2}
}

func (x *GetHashMapFieldValuesRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetHashMapFieldValuesRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type HashMapFieldValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The value of a HashMap field.
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// True if the field exists. False if it doesn't exist.
	Ok bool `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *HashMapFieldValue) Reset() {
	*x = HashMapFieldValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0_kvpb_hashmap_kv_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashMapFieldValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashMapFieldValue) ProtoMessage() {}

func (x *HashMapFieldValue) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0_kvpb_hashmap_kv_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashMapFieldValue.ProtoReflect.Descriptor instead.
func (*HashMapFieldValue) Descriptor() ([]byte, []int) {
	return file_api_v0_kvpb_hashmap_kv_proto_rawDescGZIP(), []int{3}
}

func (x *HashMapFieldValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *HashMapFieldValue) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type GetHashMapFieldValuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The returned values and their fields.
	FieldValueMap map[string]*HashMapFieldValue `protobuf:"bytes,1,rep,name=field_value_map,json=fieldValueMap,proto3" json:"field_value_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// True if the key exists. False if it doesn't exist.
	Ok bool `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *GetHashMapFieldValuesResponse) Reset() {
	*x = GetHashMapFieldValuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0_kvpb_hashmap_kv_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHashMapFieldValuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHashMapFieldValuesResponse) ProtoMessage() {}

func (x *GetHashMapFieldValuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0_kvpb_hashmap_kv_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHashMapFieldValuesResponse.ProtoReflect.Descriptor instead.
func (*GetHashMapFieldValuesResponse) Descriptor() ([]byte, []int) {
	return file_api_v0_kvpb_hashmap_kv_proto_rawDescGZIP(), []int{4}
}

func (x *GetHashMapFieldValuesResponse) GetFieldValueMap() map[string]*HashMapFieldValue {
	if x != nil {
		return x.FieldValueMap
	}
	return nil
}

func (x *GetHashMapFieldValuesResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type GetAllHashMapFieldsAndValuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The key to use.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetAllHashMapFieldsAndValuesRequest) Reset() {
	*x = GetAllHashMapFieldsAndValuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0_kvpb_hashmap_kv_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllHashMapFieldsAndValuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllHashMapFieldsAndValuesRequest) ProtoMessage() {}

func (x *GetAllHashMapFieldsAndValuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0_kvpb_hashmap_kv_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllHashMapFieldsAndValuesRequest.ProtoReflect.Descriptor instead.
func (*GetAllHashMapFieldsAndValuesRequest) Descriptor() ([]byte, []int) {
	return file_api_v0_kvpb_hashmap_kv_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllHashMapFieldsAndValuesRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetAllHashMapFieldsAndValuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The returned fields and their corresponding values.
	FieldValueMap map[string]string `protobuf:"bytes,1,rep,name=field_value_map,json=fieldValueMap,proto3" json:"field_value_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// True if the key exists. False if it doesn't exist.
	Ok bool `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *GetAllHashMapFieldsAndValuesResponse) Reset() {
	*x = GetAllHashMapFieldsAndValuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0_kvpb_hashmap_kv_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllHashMapFieldsAndValuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllHashMapFieldsAndValuesResponse) ProtoMessage() {}

func (x *GetAllHashMapFieldsAndValuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0_kvpb_hashmap_kv_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllHashMapFieldsAndValuesResponse.ProtoReflect.Descriptor instead.
func (*GetAllHashMapFieldsAndValuesResponse) Descriptor() ([]byte, []int) {
	return file_api_v0_kvpb_hashmap_kv_proto_rawDescGZIP(), []int{6}
}

func (x *GetAllHashMapFieldsAndValuesResponse) GetFieldValueMap() map[string]string {
	if x != nil {
		return x.FieldValueMap
	}
	return nil
}

func (x *GetAllHashMapFieldsAndValuesResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type DeleteHashMapFieldsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The key to use.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// The fields to remove from the HashMap.
	Fields []string `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
}

func (x *DeleteHashMapFieldsRequest) Reset() {
	*x = DeleteHashMapFieldsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0_kvpb_hashmap_kv_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHashMapFieldsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHashMapFieldsRequest) ProtoMessage() {}

func (x *DeleteHashMapFieldsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0_kvpb_hashmap_kv_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHashMapFieldsRequest.ProtoReflect.Descriptor instead.
func (*DeleteHashMapFieldsRequest) Descriptor() ([]byte, []int) {
	return file_api_v0_kvpb_hashmap_kv_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteHashMapFieldsRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DeleteHashMapFieldsRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type DeleteHashMapFieldsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The number of fields that were removed.
	FieldsRemovedCount uint32 `protobuf:"varint,1,opt,name=fields_removed_count,json=fieldsRemovedCount,proto3" json:"fields_removed_count,omitempty"`
	// True if the key exists. False if it doesn't exist.
	Ok bool `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *DeleteHashMapFieldsResponse) Reset() {
	*x = DeleteHashMapFieldsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v0_kvpb_hashmap_kv_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHashMapFieldsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHashMapFieldsResponse) ProtoMessage() {}

func (x *DeleteHashMapFieldsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v0_kvpb_hashmap_kv_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHashMapFieldsResponse.ProtoReflect.Descriptor instead.
func (*DeleteHashMapFieldsResponse) Descriptor() ([]byte, []int) {
	return file_api_v0_kvpb_hashmap_kv_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteHashMapFieldsResponse) GetFieldsRemovedCount() uint32 {
	if x != nil {
		return x.FieldsRemovedCount
	}
	return 0
}

func (x *DeleteHashMapFieldsResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

var File_api_v0_kvpb_hashmap_kv_proto protoreflect.FileDescriptor

var file_api_v0_kvpb_hashmap_kv_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x6b, 0x76, 0x70, 0x62, 0x2f, 0x68, 0x61,
	0x73, 0x68, 0x6d, 0x61, 0x70, 0x5f, 0x6b, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x6b, 0x76, 0x70, 0x62, 0x22, 0xc2, 0x01, 0x0a, 0x11,
	0x53, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x59, 0x0a, 0x0f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x6b, 0x76, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x48, 0x61,
	0x73, 0x68, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x1a, 0x40,
	0x0a, 0x12, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x42, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x4d, 0x61, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x5f, 0x61, 0x64, 0x64, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x41, 0x64, 0x64, 0x65, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x48, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x4d,
	0x61, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x39,
	0x0a, 0x11, 0x48, 0x61, 0x73, 0x68, 0x4d, 0x61, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0xf8, 0x01, 0x0a, 0x1d, 0x47, 0x65,
	0x74, 0x48, 0x61, 0x73, 0x68, 0x4d, 0x61, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x0f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x6b, 0x76,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x4d, 0x61, 0x70, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d,
	0x61, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02,
	0x6f, 0x6b, 0x1a, 0x60, 0x0a, 0x12, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x30, 0x2e, 0x6b, 0x76, 0x70, 0x62, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x4d, 0x61, 0x70, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x37, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x48, 0x61,
	0x73, 0x68, 0x4d, 0x61, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x41, 0x6e, 0x64, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xe6, 0x01,
	0x0a, 0x24, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x48, 0x61, 0x73, 0x68, 0x4d, 0x61, 0x70, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x41, 0x6e, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x0f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x44, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x6b, 0x76, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x48, 0x61, 0x73, 0x68, 0x4d, 0x61, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x41, 0x6e, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x4d, 0x61, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x02, 0x6f, 0x6b, 0x1a, 0x40, 0x0a, 0x12, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x46, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x48, 0x61, 0x73, 0x68, 0x4d, 0x61, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x5f,
	0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x4d, 0x61, 0x70, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a,
	0x14, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x32,
	0xc9, 0x03, 0x0a, 0x10, 0x48, 0x61, 0x73, 0x68, 0x4d, 0x61, 0x70, 0x4b, 0x56, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x4d,
	0x61, 0x70, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x6b, 0x76, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x6b, 0x76, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68,
	0x4d, 0x61, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x29,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x6b, 0x76, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x48, 0x61, 0x73, 0x68, 0x4d, 0x61, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x30, 0x2e, 0x6b, 0x76, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x4d,
	0x61, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x85, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x48, 0x61, 0x73, 0x68, 0x4d, 0x61, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x41,
	0x6e, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x30, 0x2e, 0x6b, 0x76, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x48, 0x61, 0x73,
	0x68, 0x4d, 0x61, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x41, 0x6e, 0x64, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x30, 0x2e, 0x6b, 0x76, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x48,
	0x61, 0x73, 0x68, 0x4d, 0x61, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x41, 0x6e, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6a, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x4d, 0x61, 0x70,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e,
	0x6b, 0x76, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x4d,
	0x61, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x30, 0x2e, 0x6b, 0x76, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x4d, 0x61, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x6b, 0x76, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_v0_kvpb_hashmap_kv_proto_rawDescOnce sync.Once
	file_api_v0_kvpb_hashmap_kv_proto_rawDescData = file_api_v0_kvpb_hashmap_kv_proto_rawDesc
)

func file_api_v0_kvpb_hashmap_kv_proto_rawDescGZIP() []byte {
	file_api_v0_kvpb_hashmap_kv_proto_rawDescOnce.Do(func() {
		file_api_v0_kvpb_hashmap_kv_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v0_kvpb_hashmap_kv_proto_rawDescData)
	})
	return file_api_v0_kvpb_hashmap_kv_proto_rawDescData
}

var file_api_v0_kvpb_hashmap_kv_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_v0_kvpb_hashmap_kv_proto_goTypes = []interface{}{
	(*SetHashMapRequest)(nil),                    // 0: api.v0.kvpb.SetHashMapRequest
	(*SetHashMapResponse)(nil),                   // 1: api.v0.kvpb.SetHashMapResponse
	(*GetHashMapFieldValuesRequest)(nil),         // 2: api.v0.kvpb.GetHashMapFieldValuesRequest
	(*HashMapFieldValue)(nil),                    // 3: api.v0.kvpb.HashMapFieldValue
	(*GetHashMapFieldValuesResponse)(nil),        // 4: api.v0.kvpb.GetHashMapFieldValuesResponse
	(*GetAllHashMapFieldsAndValuesRequest)(nil),  // 5: api.v0.kvpb.GetAllHashMapFieldsAndValuesRequest
	(*GetAllHashMapFieldsAndValuesResponse)(nil), // 6: api.v0.kvpb.GetAllHashMapFieldsAndValuesResponse
	(*DeleteHashMapFieldsRequest)(nil),           // 7: api.v0.kvpb.DeleteHashMapFieldsRequest
	(*DeleteHashMapFieldsResponse)(nil),          // 8: api.v0.kvpb.DeleteHashMapFieldsResponse
	nil,                                          // 9: api.v0.kvpb.SetHashMapRequest.FieldValueMapEntry
	nil,                                          // 10: api.v0.kvpb.GetHashMapFieldValuesResponse.FieldValueMapEntry
	nil,                                          // 11: api.v0.kvpb.GetAllHashMapFieldsAndValuesResponse.FieldValueMapEntry
}
var file_api_v0_kvpb_hashmap_kv_proto_depIdxs = []int32{
	9,  // 0: api.v0.kvpb.SetHashMapRequest.field_value_map:type_name -> api.v0.kvpb.SetHashMapRequest.FieldValueMapEntry
	10, // 1: api.v0.kvpb.GetHashMapFieldValuesResponse.field_value_map:type_name -> api.v0.kvpb.GetHashMapFieldValuesResponse.FieldValueMapEntry
	11, // 2: api.v0.kvpb.GetAllHashMapFieldsAndValuesResponse.field_value_map:type_name -> api.v0.kvpb.GetAllHashMapFieldsAndValuesResponse.FieldValueMapEntry
	3,  // 3: api.v0.kvpb.GetHashMapFieldValuesResponse.FieldValueMapEntry.value:type_name -> api.v0.kvpb.HashMapFieldValue
	0,  // 4: api.v0.kvpb.HashMapKVService.SetHashMap:input_type -> api.v0.kvpb.SetHashMapRequest
	2,  // 5: api.v0.kvpb.HashMapKVService.GetHashMapFieldValues:input_type -> api.v0.kvpb.GetHashMapFieldValuesRequest
	5,  // 6: api.v0.kvpb.HashMapKVService.GetAllHashMapFieldsAndValues:input_type -> api.v0.kvpb.GetAllHashMapFieldsAndValuesRequest
	7,  // 7: api.v0.kvpb.HashMapKVService.DeleteHashMapFields:input_type -> api.v0.kvpb.DeleteHashMapFieldsRequest
	1,  // 8: api.v0.kvpb.HashMapKVService.SetHashMap:output_type -> api.v0.kvpb.SetHashMapResponse
	4,  // 9: api.v0.kvpb.HashMapKVService.GetHashMapFieldValues:output_type -> api.v0.kvpb.GetHashMapFieldValuesResponse
	6,  // 10: api.v0.kvpb.HashMapKVService.GetAllHashMapFieldsAndValues:output_type -> api.v0.kvpb.GetAllHashMapFieldsAndValuesResponse
	8,  // 11: api.v0.kvpb.HashMapKVService.DeleteHashMapFields:output_type -> api.v0.kvpb.DeleteHashMapFieldsResponse
	8,  // [8:12] is the sub-list for method output_type
	4,  // [4:8] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_api_v0_kvpb_hashmap_kv_proto_init() }
func file_api_v0_kvpb_hashmap_kv_proto_init() {
	if File_api_v0_kvpb_hashmap_kv_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v0_kvpb_hashmap_kv_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetHashMapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0_kvpb_hashmap_kv_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetHashMapResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0_kvpb_hashmap_kv_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHashMapFieldValuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0_kvpb_hashmap_kv_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashMapFieldValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0_kvpb_hashmap_kv_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHashMapFieldValuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0_kvpb_hashmap_kv_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllHashMapFieldsAndValuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0_kvpb_hashmap_kv_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllHashMapFieldsAndValuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0_kvpb_hashmap_kv_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHashMapFieldsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v0_kvpb_hashmap_kv_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHashMapFieldsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v0_kvpb_hashmap_kv_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v0_kvpb_hashmap_kv_proto_goTypes,
		DependencyIndexes: file_api_v0_kvpb_hashmap_kv_proto_depIdxs,
		MessageInfos:      file_api_v0_kvpb_hashmap_kv_proto_msgTypes,
	}.Build()
	File_api_v0_kvpb_hashmap_kv_proto = out.File
	file_api_v0_kvpb_hashmap_kv_proto_rawDesc = nil
	file_api_v0_kvpb_hashmap_kv_proto_goTypes = nil
	file_api_v0_kvpb_hashmap_kv_proto_depIdxs = nil
}
